{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowALl","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","console","log","returnedNote","catch","err","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3050b9d2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n  ? 'Not important'\r\n  : 'Important'\r\n\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default {getAll, create, update}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/notes'\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowALl] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => setNotes(initialNotes))\r\n  }, [])\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = {...note, important: !note.important}\r\n    console.log(note)\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(err => {\r\n          setErrorMessage(\r\n            `Muistiinpano '${note.content}' on jo valitettavasti poistettu palvelimelta`\r\n          )\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n\r\n  const rows = () => notesToShow.map(note => \r\n    <Note key={note.id} \r\n          note={note}\r\n          toggleImportance={() => toggleImportanceOf(note.id)} /> )\r\n\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Muistiinpanot</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowALl(!showAll)}>\r\n          N채yt채 {showAll ? 'T채rke채t' : 'Kaikki'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {rows()}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">Tallenna</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\n\nReactDOM.render(\n  <App  />,\n  document.getElementById('root')\n)"],"sourceRoot":""}